# Nginx configuration for Asset Management System
# Place this file at: /etc/nginx/sites-available/assetmanagement
# Create symlink: sudo ln -s /etc/nginx/sites-available/assetmanagement /etc/nginx/sites-enabled/

# Upstream for the .NET application
upstream assetmanagement_app {
    server 127.0.0.1:5000;
}

# Rate limiting
limit_req_zone $binary_remote_addr zone=assetmanagement:10m rate=10r/s;

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name your-domain.com www.your-domain.com;
    
    # Let's Encrypt challenge location
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }
    
    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server configuration
server {
    listen 443 ssl http2;
    server_name your-domain.com www.your-domain.com;
    
    # SSL configuration (uncomment and configure when you have SSL certificates)
    # ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
    # ssl_session_timeout 1d;
    # ssl_session_cache shared:MozTLS:10m;
    # ssl_session_tickets off;
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    # ssl_prefer_server_ciphers off;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdnjs.cloudflare.com https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self';" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Client upload limit (for file uploads)
    client_max_body_size 50M;
    
    # Rate limiting
    limit_req zone=assetmanagement burst=20 nodelay;
    
    # Root directory
    root /var/www/assetmanagement/current/wwwroot;
    index index.html;
    
    # Static files caching
    location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }
    
    # File uploads location
    location /files/ {
        alias /var/www/assetmanagement/current/wwwroot/files/;
        expires 1d;
        add_header Cache-Control "private";
        
        # Security: prevent execution of uploaded files
        location ~ \.(php|asp|aspx|jsp|exe|bat|sh)$ {
            deny all;
        }
    }
    
    # Health check endpoint (allow without rate limiting)
    location /health {
        limit_req off;
        proxy_pass http://assetmanagement_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Quick health check timeout
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # API endpoints
    location /api/ {
        proxy_pass http://assetmanagement_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API-specific timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffer settings for API responses
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
    
    # Main application
    location / {
        try_files $uri $uri/ @proxy;
    }
    
    # Proxy to .NET application
    location @proxy {
        proxy_pass http://assetmanagement_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support (if needed)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection keep-alive;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_max_temp_file_size 1024m;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    # Security: deny access to sensitive files
    location ~ /\. {
        deny all;
    }
    
    location ~ \.(config|dll|pdb|json)$ {
        deny all;
    }
    
    # Logging
    access_log /var/log/nginx/assetmanagement_access.log;
    error_log /var/log/nginx/assetmanagement_error.log;
}

# Alternative configuration for development/testing without SSL
server {
    listen 80;
    server_name localhost;
    
    # All the same configuration as above, minus SSL settings
    root /var/www/assetmanagement/current/wwwroot;
    index index.html;
    
    client_max_body_size 50M;
    limit_req zone=assetmanagement burst=20 nodelay;
    
    location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }
    
    location /files/ {
        alias /var/www/assetmanagement/current/wwwroot/files/;
        expires 1d;
        add_header Cache-Control "private";
    }
    
    location /health {
        limit_req off;
        proxy_pass http://assetmanagement_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location / {
        try_files $uri $uri/ @proxy;
    }
    
    location @proxy {
        proxy_pass http://assetmanagement_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection keep-alive;
        proxy_cache_bypass $http_upgrade;
    }
    
    access_log /var/log/nginx/assetmanagement_access.log;
    error_log /var/log/nginx/assetmanagement_error.log;
}
