@{
    ViewData["Title"] = "نقل الأصول";
    Layout = "~/Views/Shared/_Dashboard.cshtml";
}

<style>
    a.btn-light {
        background-color: white !important;
        color: #0d6efd !important;
    }
    
    .card-header {
        background: linear-gradient(135deg, #0d6efd, #0a58ca) !important;
    }
    
    .btn-icon-circle {
        border-radius: 50%;
        width: 36px;
        height: 36px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s;
    }
    
    .btn-icon-circle:hover {
        transform: scale(1.1);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }
    
    .selected-row {
        background-color: rgba(13, 110, 253, 0.1) !important;
    }
    
    .quick-filter-card {
        transition: all 0.3s;
        cursor: pointer;
    }
    
    .quick-filter-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 15px rgba(0,0,0,0.1);
    }
    
    .filter-actions {
        display: none;
    }
    
    .filters-active .filter-actions {
        display: flex;
    }
    
    /* Custom tooltip */
    .custom-tooltip {
        position: relative;
    }
    
    .custom-tooltip:hover::after {
        content: attr(data-tooltip);
        position: absolute;
        top: -35px;
        right: 0;
        background: rgba(0,0,0,0.8);
        color: white;
        padding: 5px 10px;
        border-radius: 5px;
        font-size: 12px;
        white-space: nowrap;
        z-index: 1000;
    }
</style>

<!-- Success/Error Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mb-4" role="alert">
        <i class="bi bi-check-circle-fill me-2"></i> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show mb-4" role="alert">
        <i class="bi bi-exclamation-triangle-fill me-2"></i> @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container-fluid mt-4">
    <!-- Stats and Quick Links Row -->
    <div class="row mb-4">
        <!-- Quick Filters Cards -->
        <div class="col-lg-9">
            <div class="row">
                <div class="col-md-3">
                    <div class="card shadow-sm rounded-4 quick-filter-card" onclick="filterToday()">
                        <div class="card-body text-center">
                            <i class="bi bi-calendar-day text-primary" style="font-size: 2rem;"></i>
                            <h5 class="mt-2">اليوم</h5>
                            <span class="badge bg-primary" id="todayCount">0</span>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card shadow-sm rounded-4 quick-filter-card" onclick="filterThisWeek()">
                        <div class="card-body text-center">
                            <i class="bi bi-calendar-week text-success" style="font-size: 2rem;"></i>
                            <h5 class="mt-2">هذا الأسبوع</h5>
                            <span class="badge bg-success" id="weekCount">0</span>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card shadow-sm rounded-4 quick-filter-card" onclick="filterThisMonth()">
                        <div class="card-body text-center">
                            <i class="bi bi-calendar-month text-warning" style="font-size: 2rem;"></i>
                            <h5 class="mt-2">هذا الشهر</h5>
                            <span class="badge bg-warning" id="monthCount">0</span>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card shadow-sm rounded-4 quick-filter-card" onclick="showDateRangeFilter()">
                        <div class="card-body text-center">
                            <i class="bi bi-funnel text-info" style="font-size: 2rem;"></i>
                            <h5 class="mt-2">تصفية مخصصة</h5>
                            <button class="btn btn-sm btn-info px-4">اختيار</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Add New Button -->
        <div class="col-lg-3">
            <div class="card shadow-sm rounded-4 h-100 d-flex align-items-center justify-content-center">
                <div class="card-body text-center">
                    <a asp-action="Create" class="btn btn-primary btn-lg w-100">
                        <i class="bi bi-plus-lg me-2"></i> إضافة عملية نقل جديدة
                    </a>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Date Range Filter Panel (Initially Hidden) -->
    <div id="dateRangeFilter" class="card shadow-sm rounded-4 mb-4" style="display: none;">
        <div class="card-body">
            <div class="row align-items-center">
                <div class="col-md-3">
                    <label class="form-label fw-bold">من تاريخ</label>
                    <input type="date" id="startDate" class="form-control">
                </div>
                <div class="col-md-3">
                    <label class="form-label fw-bold">إلى تاريخ</label>
                    <input type="date" id="endDate" class="form-control">
                </div>
                <div class="col-md-3">
                    <label class="form-label fw-bold">القسم المستلم</label>
                    <select id="departmentFilter" class="form-select">
                        <option value="">جميع الأقسام</option>
                        <!-- Will be populated dynamically -->
                    </select>
                </div>
                <div class="col-md-3 d-flex align-items-end">
                    <button id="applyFilters" class="btn btn-primary me-2">
                        <i class="bi bi-check2"></i> تطبيق
                    </button>
                    <button id="resetFilters" class="btn btn-outline-secondary">
                        <i class="bi bi-x-lg"></i> إلغاء
                    </button>
                </div>
            </div>
            
            <div class="mt-3 filter-actions align-items-center">
                <span class="badge bg-primary me-2" id="filterBadge">0 عملية نقل</span>
                <button id="clearFilters" class="btn btn-sm btn-outline-danger">
                    <i class="bi bi-x-circle"></i> مسح التصفية
                </button>
            </div>
        </div>
    </div>

    <!-- Main Data Card -->
    <div class="card shadow-lg rounded-4 border-0">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center py-3">
            <h3 class="fw-bold m-0"><i class="bi bi-arrow-left-right me-2"></i> نقل الأصول</h3>
            <div class="d-flex">
                <a asp-action="Create" class="btn btn-light text-primary rounded-pill px-4 shadow-sm">
                    <i class="bi bi-plus-lg"></i> إضافة مناقلة
                </a>
            </div>
        </div>
        <div class="card-body">
            <!-- Selected Count & Export Buttons -->
            <div class="d-flex justify-content-between align-items-center mb-3">
                <div id="selectedCountDisplay" style="display: none;">
                    <span class="badge bg-primary" id="selectedCount">0</span> عناصر محددة
                    <button id="clearSelection" class="btn btn-sm btn-outline-secondary ms-2">
                        <i class="bi bi-eraser"></i> مسح التحديد
                    </button>
                </div>

                <!-- Export buttons -->
                <div class="d-flex gap-2">
                    <button id="generatePdfForSelected" class="btn btn-outline-danger rounded-pill px-3 shadow-sm">
                        <i class="bi bi-file-earmark-pdf"></i> تصدير المحدد إلى PDF
                    </button>
                    <button id="exportPdf" class="btn btn-outline-danger rounded-pill px-3 shadow-sm">
                        <i class="bi bi-file-earmark-pdf"></i> تصدير الكل إلى PDF
                    </button>
                </div>
            </div>


            <!-- Data Table -->
            <div class="table-responsive">
                <table id="assetTransfersTable" class="table table-hover table-bordered align-middle shadow-sm">
                    <thead class="table-dark text-center">
                        <tr>
                            <th><input type="checkbox" id="selectAll"></th>
                            <th><i class="fas fa-hashtag"></i> ID</th>
                            <th><i class="fas fa-random"></i> نوع النقل</th>
                            <th><i class="fas fa-calendar-alt"></i> تاريخ النقل</th>
                            <th><i class="fas fa-building"></i> من القسم</th>
                            <th><i class="fas fa-building"></i> إلى القسم</th>
                            <th><i class="fas fa-tag"></i> رقم الأصل</th>
                            <th><i class="fas fa-info-circle"></i> وصف الأصل</th>
                            <th><i class="fas fa-cogs"></i> الإجراءات</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.2.3/css/buttons.bootstrap5.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/select/1.3.4/css/select.bootstrap5.min.css">

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.3/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.3/js/buttons.bootstrap5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.3/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.3/js/buttons.print.min.js"></script>
    <script src="https://cdn.datatables.net/select/1.3.4/js/dataTables.select.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>

    <script>
        $(document).ready(function () {
            // Initialize variables
            let selectedRows = new Set();
            let filteredData = [];
            let table;
            
            // Initialize DataTable
                   // Initialize DataTable
        table = $('#assetTransfersTable').DataTable({
            processing: true,
            serverSide: true,
            language: {
                processing: "<div class='spinner-border text-primary'></div>",
                search: "بحث:",
                lengthMenu: "عرض _MENU_ سجلات",
                info: "عرض _START_ الى _END_ من _TOTAL_ سجل",
                infoEmpty: "لا توجد سجلات متاحة",
                infoFiltered: "(تمت تصفيتها من _MAX_ سجل)",
                emptyTable: "لا توجد بيانات متاحة في الجدول",
                zeroRecords: "لم يتم العثور على سجلات مطابقة",
                paginate: {
                    first: "الأول",
                    previous: "السابق",
                    next: "التالي",
                    last: "الأخير"
                }
            },
            ajax: {
                url: '@Url.Action("GetAssetTransfers", "AssetTransfer")',
                type: 'POST',
                data: function(d) {
                    // Add custom filters
                    d.startDate = $('#startDate').val();
                    d.endDate = $('#endDate').val();
                    d.department = $('#departmentFilter').val();
                    return d;
                }
            },
            select: {
                style: 'multi',
                selector: 'td:first-child input[type="checkbox"]'
            },
            columns: [
                {
                    data: null,
                    orderable: false,
                    className: 'text-center',
                    render: function () {
                        return '<input type="checkbox" class="row-checkbox">';
                    }
                },
                { data: 'id' },
                { data: 'transferType' },
                {
                    data: 'transferDate',
                },
                { data: 'fromDepartment' },
                { data: 'toDepartment' },
                { data: 'assetTag' },
                { data: 'assetDescription' },
                {
                    data: 'id',
                    render: function (data, type, row) {
                        return `
                            <div class="d-flex justify-content-center gap-2">
                                 
                                <a href="/AssetTransfer/GenerateTransferPdf/${data}" class="btn btn-outline-danger btn-sm btn-icon-circle" title="تنزيل PDF">
                                    <i class="fas fa-file-pdf"></i>
                                </a>
                                <a href="/AssetTransfer/Edit/${data}" class="btn btn-outline-warning btn-sm btn-icon-circle" title="تعديل">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <a href="/AssetTransfer/Delete/${data}" class="btn btn-outline-danger btn-sm btn-icon-circle" title="حذف">
                                    <i class="fas fa-trash"></i>
                                </a>
                            </div>`;
                    }
                }
            ],
            dom: '<"row"<"col-md-6"l><"col-md-6"f>>rt<"row"<"col-md-5"i><"col-md-7"p>>', // Removed 'B' from dom
            order: [[3, 'desc']], // Sort by transfer date descending by default
            drawCallback: function() {
                // Update the quick filter counts
                updateQuickFilterCounts();
            }
        });

            // Handle "Select All" checkbox
            $('#selectAll').on('click', function () {
                const isChecked = this.checked;
                $('.row-checkbox').each(function () {
                    this.checked = isChecked;
                    const row = $(this).closest('tr');
                    const rowData = table.row(row).data();
                    
                    if (isChecked) {
                        selectedRows.add(rowData.id);
                        row.addClass('selected-row');
                    } else {
                        selectedRows.delete(rowData.id);
                        row.removeClass('selected-row');
                    }
                });
                
                updateSelectedCount();
            });

            // Handle row selection
            $('#assetTransfersTable tbody').on('click', 'input.row-checkbox', function () {
                const $row = $(this).closest('tr');
                const rowData = table.row($row).data();
                
                if (this.checked) {
                    selectedRows.add(rowData.id);
                    $row.addClass('selected-row');
                } else {
                    selectedRows.delete(rowData.id);
                    $row.removeClass('selected-row');
                }
                
                updateSelectedCount();
            });
            
            // Update selected count display
            function updateSelectedCount() {
                const count = selectedRows.size;
                $('#selectedCount').text(count);
                
                if (count > 0) {
                    $('#selectedCountDisplay').show();
                } else {
                    $('#selectedCountDisplay').hide();
                }
            }
            
            // Clear selection
            $('#clearSelection').on('click', function() {
                selectedRows.clear();
                $('.row-checkbox').prop('checked', false);
                $('#selectAll').prop('checked', false);
                $('.selected-row').removeClass('selected-row');
                updateSelectedCount();
            });
            
            // Handle export Excel button
            $('#exportExcel').on('click', function() {
                window.location.href = '@Url.Action("ExportToExcel", "AssetTransfer")';
            });
            
            // Handle export PDF button (for all transfers)
                $('#exportPdf').on('click', function() {
            if (confirm('هل تريد تصدير جميع عمليات النقل إلى PDF؟')) {
                // Get date range if filter is active
                let startDate = $('#startDate').val();
                let endDate = $('#endDate').val();

                if (startDate && endDate) {
                    // Export with date range filter
                    window.location.href = `@Url.Action("GenerateTransfersPdfByDateRange", "AssetTransfer")?startDate=${startDate}&endDate=${endDate}`;
                } else {
                    // Export all transfers
                    window.location.href = '@Url.Action("GenerateAllTransfersPdf", "AssetTransfer")';
                }
            }
        });
            
            // Function to get all IDs from the current table view
            function getAllIdsFromTable() {
                const allIds = [];
                table.rows({ search: 'applied' }).every(function() {
                    allIds.push(this.data().id);
                });
                return allIds;
            }
            
            // Generate PDF for selected transfers
                     $('#generatePdfForSelected').on('click', function() {
            if (selectedRows.size === 0) {
                alert('الرجاء تحديد عمليات النقل أولا');
                return;
            }

            // Create a form to submit selected IDs
            let form = $('<form action="@Url.Action("GenerateMultipleTransfersPdf", "AssetTransfer")" method="post"></form>');

            // Add all selected IDs to the form
            Array.from(selectedRows).forEach((id, index) => {
                form.append(`<input type="hidden" name="ids[${index}]" value="${id}">`);
            });

            // Add anti-forgery token
            form.append('@Html.AntiForgeryToken()');

            // Append to body, submit, then remove
            $('body').append(form);
            form.submit();
            form.remove();
        });
            
            // Function to export PDF for selected transfer IDs
            function exportPdfForSelected(ids) {
                $.ajax({
                    url: '@Url.Action("GenerateMultipleTransfersPdf", "AssetTransfer")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(ids),
                    xhrFields: {
                        responseType: 'blob'
                    },
                    success: function(blob) {
                        // Create object URL and download
                        const url = window.URL.createObjectURL(blob);
                        const a = document.createElement('a');
                        a.href = url;
                        a.download = `AssetTransfers_${new Date().toISOString().slice(0,10)}.pdf`;
                        document.body.appendChild(a);
                        a.click();
                        window.URL.revokeObjectURL(url);
                    },
                    error: function(xhr) {
                        console.error('Error generating PDF:', xhr);
                        alert('حدث خطأ أثناء إنشاء ملف PDF');
                    }
                });
            }
            
            // Function to export PDF by date range
            function exportPdfByDateRange(startDate, endDate) {
                $.ajax({
                    url: '@Url.Action("GenerateTransfersPdfByDateRange", "AssetTransfer")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        startDate: startDate,
                        endDate: endDate
                    }),
                    xhrFields: {
                        responseType: 'blob'
                    },
                    success: function(blob) {
                        // Create object URL and download
                        const url = window.URL.createObjectURL(blob);
                        const a = document.createElement('a');
                        a.href = url;
                        a.download = `AssetTransfers_${startDate}_to_${endDate}.pdf`;
                        document.body.appendChild(a);
                        a.click();
                        window.URL.revokeObjectURL(url);
                    },
                    error: function(xhr) {
                        console.error('Error generating PDF by date range:', xhr);
                        alert('حدث خطأ أثناء إنشاء ملف PDF للفترة المحددة');
                    }
                });
            }

           
          
            // Show date range filter
            window.showDateRangeFilter = function() {
                $('#dateRangeFilter').slideDown();
            };

            // Filter by today
            window.filterToday = function() {
                const today = new Date().toISOString().split('T')[0];
                $('#startDate').val(today);
                $('#endDate').val(today);
                $('#dateRangeFilter').slideDown();
                $('#dateRangeFilter').addClass('filters-active');
                $('#filterBadge').text('تصفية اليوم');
                applyDateFilter();
            };

            // Filter by this week
            window.filterThisWeek = function() {
                const today = new Date();
                const firstDay = new Date(today.setDate(today.getDate() - today.getDay()));
                const lastDay = new Date(today.setDate(today.getDate() - today.getDay() + 6));

                $('#startDate').val(firstDay.toISOString().split('T')[0]);
                $('#endDate').val(lastDay.toISOString().split('T')[0]);
                $('#dateRangeFilter').slideDown();
                $('#dateRangeFilter').addClass('filters-active');
                $('#filterBadge').text('تصفية الأسبوع');
                applyDateFilter();
            };

            // Filter by this month
            window.filterThisMonth = function() {
                const date = new Date();
                const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);
                const lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);

                $('#startDate').val(firstDay.toISOString().split('T')[0]);
                $('#endDate').val(lastDay.toISOString().split('T')[0]);
                $('#dateRangeFilter').slideDown();
                $('#dateRangeFilter').addClass('filters-active');
                $('#filterBadge').text('تصفية الشهر');
                applyDateFilter();
            };

            // Apply date filter
            function applyDateFilter() {
                table.ajax.reload();
            }

            // Handle apply filters button
            $('#applyFilters').on('click', function() {
                $('#dateRangeFilter').addClass('filters-active');
                applyDateFilter();
            });

            // Handle reset filters button
            $('#resetFilters').on('click', function() {
                $('#startDate').val('');
                $('#endDate').val('');
                $('#departmentFilter').val('');
                $('#dateRangeFilter').removeClass('filters-active');
                applyDateFilter();
            });

            // Handle clear filters button
            $('#clearFilters').on('click', function() {
                $('#startDate').val('');
                $('#endDate').val('');
                $('#departmentFilter').val('');
                $('#dateRangeFilter').removeClass('filters-active');
                $('#dateRangeFilter').slideUp();
                applyDateFilter();
            });

            // Update quick filter counts (today, week, month)
            function updateQuickFilterCounts() {
                const today = new Date().toISOString().split('T')[0];

                // Count today's transfers
                let todayCount = 0;
                table.rows().data().each(function(data) {
                    const transferDate = new Date(data.transferDate).toISOString().split('T')[0];
                    if (transferDate === today) {
                        todayCount++;
                    }
                });
                $('#todayCount').text(todayCount);

                // Count this week's transfers
                const now = new Date();
                const startOfWeek = new Date(now.setDate(now.getDate() - now.getDay())).toISOString().split('T')[0];
                const endOfWeek = new Date(now.setDate(now.getDate() - now.getDay() + 6)).toISOString().split('T')[0];

                let weekCount = 0;
                table.rows().data().each(function(data) {
                    const transferDate = new Date(data.transferDate).toISOString().split('T')[0];
                    if (transferDate >= startOfWeek && transferDate <= endOfWeek) {
                        weekCount++;
                    }
                });
                $('#weekCount').text(weekCount);

                // Count this month's transfers
                const date = new Date();
                const startOfMonth = new Date(date.getFullYear(), date.getMonth(), 1).toISOString().split('T')[0];
                const endOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0).toISOString().split('T')[0];

                let monthCount = 0;
                table.rows().data().each(function(data) {
                    const transferDate = new Date(data.transferDate).toISOString().split('T')[0];
                    if (transferDate >= startOfMonth && transferDate <= endOfMonth) {
                        monthCount++;
                    }
                });
                $('#monthCount').text(monthCount);
            }

            // Load departments for filter dropdown
            loadDepartments();

            function loadDepartments() {
                $.ajax({
                    url: '/Asset/GetDepartments',
                    type: 'GET',
                    success: function(data) {
                        const dropdown = $('#departmentFilter');
                        dropdown.empty();
                        dropdown.append('<option value="">جميع الأقسام</option>');

                        $.each(data, function(i, dept) {
                            dropdown.append($('<option></option>').val(dept.id).text(dept.name));
                        });
                    },
                    error: function() {
                        console.error('Failed to load departments');
                    }
                });
            }
        });
    </script>
}