@using System.Linq <!-- Add this line at the top of your view -->
@model AssetManagementSystem.PL.Models.DashboardViewModel

@{
    Layout = "~/Views/Shared/_Dashboard.cshtml";
}

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <!-- Total Assets Card (Unchanged) -->
            <div class="col-md-4">
                <div class="small-box bg-gradient-info shadow-sm rounded-3 p-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h4 class="fw-bold mb-1">@Model.AssetCount</h4>
                            <p class="mb-0 text-light">Total Assets</p>
                        </div>
                        <i class="fas fa-box fa-2x text-white-50"></i>
                    </div>
                    <a href="@Url.Action("Index", "Asset")" class="small-box-footer text-light text-decoration-none d-block mt-2">
                        More info <i class="fas fa-arrow-right"></i>
                    </a>
                </div>
            </div>

            <!-- Quick Actions Card (Unchanged) -->
            <div class="col-md-8">
                <div class="card bg-dark text-white shadow-lg border-0 rounded-4">
                    <div class="card-body text-center">
                        <h4 class="fw-bold"><i class="fas fa-bolt me-2"></i> Quick Actions</h4>
                        <p class="text-secondary mb-4">Manage assets efficiently with these shortcuts</p>
                        <div class="d-flex flex-wrap justify-content-center gap-3">
                            <a href="@Url.Action("Index", "Asset")" class="btn btn-outline-light px-4 py-2 d-flex align-items-center gap-2 shadow-sm">
                                <i class="fas fa-box"></i> <span>Manage Assets</span>
                            </a>
                            <a href="@Url.Action("Index", "AssetTransfer")" class="btn btn-outline-warning px-4 py-2 d-flex align-items-center gap-2 shadow-sm">
                                <i class="fas fa-exchange-alt"></i> <span>Asset Transfers</span>
                            </a>
                            <a href="@Url.Action("Index", "Disposal")" class="btn btn-outline-danger px-4 py-2 d-flex align-items-center gap-2 shadow-sm">
                                <i class="fas fa-trash-alt"></i> <span>Disposal</span>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Dynamic Data Sections -->
        <div class="row mt-4">
            @foreach (var section in new[] { "Assets", "AssetTransfers", "Buildings", "Facilities", "Departments", "Disposals", "Rooms", "Users" })
            {
                var formattedSection = section.Replace("AssetTransfers", "Asset Transfers");
                var propertyInfo = Model.GetType().GetProperty(section);
                var data = propertyInfo?.GetValue(Model) as IEnumerable<dynamic>;
                var hasData = data?.Any() == true;

                <div class="col-md-6 mb-4">
                    <div class="card card-primary card-outline">
                        <div class="card-header">
                            <h3 class="card-title">
                                <i class="fas fa-database mr-2"></i> @formattedSection
                            </h3>
                            <div class="card-tools">
                                <button type="button" class="btn btn-tool" onclick="location.reload();">
                                    <i class="fas fa-sync-alt"></i>
                                </button>
                                <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                    <i class="fas fa-minus"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body">
                            @if (hasData)
                            {
                                <div class="table-responsive">
                                    <table class="table table-bordered table-hover">
                                        <thead class="thead-light">
                                            <tr>
                                                @foreach (var prop in propertyInfo.PropertyType.GetGenericArguments().First().GetProperties())
                                                {
                                                    <th>@prop.Name</th>
                                                }
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in data)
                                            {
                                                <tr>
                                                    @foreach (var prop in item.GetType().GetProperties())
                                                    {
                                                        var value = prop.GetValue(item);
                                                        <td>
                                                            @if (value == null)
                                                            {
                                                                <text>-</text>
                                                            }
                                                            else if (value.GetType().IsPrimitive || value is string || value is DateTime)
                                                            {
                                                                <text>@value</text>
                                                            }
                                                            else if (value is IEnumerable<dynamic> list)
                                                            {
                                                                <text>@string.Join(", ", list.Select(v => v?.GetType().GetProperty("Name")?.GetValue(v)?.ToString() ?? v.ToString()))</text>
                                                            }
                                                            else
                                                            {
                                                                if (value?.GetType().FullName == "AssetManagementSystem.DAL.Entities.Asset")
                                                                {
                                                                    var asset = (AssetManagementSystem.DAL.Entities.Asset)value;
                                                                    <text>@asset.AssetDescription</text>
                                                                }
                                                                else
                                                                {
                                                                    var nameProp = value?.GetType().GetProperty("Name")
                                                                    ?? value?.GetType().GetProperty("Title")
                                                                    ?? value?.GetType().GetProperty("Description");

                                                                    @(nameProp != null ? nameProp.GetValue(value) : value?.ToString())
                                                                }
                                                            }
                                                        </td>
                                                    }
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <p class="text-muted text-center">No @formattedSection.ToLower() found.</p>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Change Log Card -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="card card-success card-outline">
                    <div class="card-header">
                        <h3 class="card-title">
                            <i class="fas fa-clock mr-2"></i> Recent Changes
                        </h3>
                        <div class="card-tools">
                            <a href="@Url.Action("Index", "ChangeLog")" class="btn btn-tool">
                                <i class="fas fa-external-link-alt"></i> View All
                            </a>
                            <button type="button" class="btn btn-tool" onclick="location.reload();">
                                <i class="fas fa-sync-alt"></i>
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        @if (Model.RecentChangelogs?.Any() == true)
                        {
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Entity</th>
                                            <th>Action</th>
                                            <th>Date</th>
                                            <th>User</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var log in Model.RecentChangelogs)
                                        {
                                            <tr>
                                                <td>@log.EntityName</td>
                                                <td>@log.ActionType</td>
                                                <td>@log.ChangeDate.ToString("yyyy-MM-dd HH:mm")</td>
                                                <td>@(log.User?.FullName ?? "System")</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                            <div class="text-center mt-3">
                                <a href="@Url.Action("Index", "ChangeLog")" class="btn btn-outline-primary">
                                    View All Changes
                                </a>
                            </div>
                        }
                        else
                        {
                            <p class="text-muted text-center">No recent changes found.</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Modal for Viewing JSON Data -->
<div class="modal fade" id="jsonModal" tabindex="-1" aria-labelledby="jsonModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-secondary text-white">
                <h5 class="modal-title"><i class="fas fa-file-alt"></i> Change Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <pre id="jsonData" class="p-3 bg-light border rounded text-wrap"></pre>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.25/css/dataTables.bootstrap5.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.25/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.25/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#changeLogsTable').DataTable({
                processing: true,
                serverSide: true,
                ajax: {
                    url: '@Url.Action("GetChangeLogs", "ChangeLog")',
                    type: 'POST'
                },
                columns: [
                    { data: 'entityName', className: "text-center" },
                    { data: 'entityId', className: "text-center" },
                    { data: 'actionType', className: "text-center" },
                    {
                        data: 'oldValues',
                        className: "text-center",
                        render: function (data) {
                            return formatJsonButton(data, 'Old Values');
                        }
                    },
                    {
                        data: 'newValues',
                        className: "text-center",
                        render: function (data) {
                            return formatJsonButton(data, 'New Values');
                        }
                    },
                    { data: 'changeDate', className: "text-center" },
                    { data: 'userFullName', className: "text-center" }
                ]
            });
        });

        function formatJsonButton(json, title) {
            if (!json) return '<span class="text-muted">No Data</span>';
            try {
                return `<button class="btn btn-sm btn-outline-info rounded-pill" onclick='showJsonModal(${JSON.stringify(json)}, "${title}")'>
                            <i class="fas fa-eye"></i> View
                        </button>`;
            } catch (error) {
                return '<span class="text-danger">Invalid Data</span>';
            }
        }

        function showJsonModal(jsonString, title) {
            try {
                let parsedData = JSON.parse(jsonString.replace(/&quot;/g, '"'));
                document.getElementById("jsonData").innerText = JSON.stringify(parsedData, null, 4);
                let modal = new bootstrap.Modal(document.getElementById("jsonModal"));
                modal.show();
            } catch (error) {
                console.error("JSON Parsing Error:", error);
                alert("Invalid JSON format!");
            }
        }
    </script>
}