@model LoginViewModel
@{
    Layout = "~/Views/Shared/_AuthLayout_Tabler.cshtml";
    ViewData["Title"] = "تسجيل الدخول";
}

<!-- Validation Summary -->
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger d-flex align-items-center mb-4" role="alert">
        <i class="fas fa-exclamation-triangle me-2"></i>
        <div>
            <strong>خطأ في البيانات:</strong>
            <ul class="mb-0 mt-2">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    </div>
}

<form asp-action="Login" method="post" class="needs-validation" novalidate>
    @Html.AntiForgeryToken()
    
    <div class="mb-4">
        <label asp-for="Email" class="form-label">البريد الإلكتروني</label>
        <div class="input-group">
            <span class="input-group-text">
                <i class="fas fa-envelope"></i>
            </span>
            <input asp-for="Email" 
                   class="form-control @(ViewData.ModelState["Email"]?.Errors.Count > 0 ? "is-invalid" : "")" 
                   placeholder="أدخل بريدك الإلكتروني" 
                   dir="ltr" 
                   required />
        </div>
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>

    <div class="mb-4">
        <label asp-for="Password" class="form-label">كلمة المرور</label>
        <div class="input-group">
            <span class="input-group-text">
                <i class="fas fa-lock"></i>
            </span>
            <input asp-for="Password" 
                   type="password" 
                   class="form-control @(ViewData.ModelState["Password"]?.Errors.Count > 0 ? "is-invalid" : "")" 
                   id="password" 
                   placeholder="أدخل كلمة المرور" 
                   required />
            <button class="btn btn-outline-secondary" type="button" onclick="togglePasswordVisibility()" tabindex="-1">
                <i class="fas fa-eye" id="password-toggle-icon"></i>
            </button>
        </div>
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>

    <div class="mb-4">
        <div class="form-check">
           @*  <input asp-for="RememberMe" type="checkbox" class="form-check-input" id="rememberMe"> *@
            <label class="form-check-label" for="rememberMe">
                تذكرني
            </label>
        </div>
    </div>

    <div class="d-grid gap-2 mb-4">
        <button type="submit" class="btn btn-primary btn-auth">
            <i class="fas fa-sign-in-alt me-2"></i>
            تسجيل الدخول
        </button>
    </div>

    <div class="text-center">
        <div class="mb-3">
            <a asp-action="ForgotPassword" class="text-decoration-none">
                <i class="fas fa-key me-1"></i>
                نسيت كلمة المرور؟
            </a>
        </div>
        
        <hr class="my-4">
        
        <p class="text-muted mb-0">
            ليس لديك حساب؟
            <a asp-action="Register" class="text-decoration-none fw-bold">
                إنشاء حساب جديد
            </a>
        </p>
    </div>
</form>

<script>
    function togglePasswordVisibility() {
        const passwordInput = document.getElementById('password');
        const toggleIcon = document.getElementById('password-toggle-icon');
        
        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            toggleIcon.classList.remove('fa-eye');
            toggleIcon.classList.add('fa-eye-slash');
        } else {
            passwordInput.type = 'password';
            toggleIcon.classList.remove('fa-eye-slash');
            toggleIcon.classList.add('fa-eye');
        }
    }
    
    // Form validation
    (function() {
        'use strict';
        window.addEventListener('load', function() {
            var forms = document.getElementsByClassName('needs-validation');
            var validation = Array.prototype.filter.call(forms, function(form) {
                form.addEventListener('submit', function(event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>
