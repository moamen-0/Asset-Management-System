
Sub search()
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    
    Dim dataSheet As Worksheet
    Dim searchSheet As Worksheet
    Dim lastRow As Long
    Dim matchRow As Variant
    Dim searchData As Variant
    Dim i As Long
    
    ' Assign the data sheets
    Set dataSheet = ThisWorkbook.Sheets("ALL FA- الاصول")
    Set searchSheet = ThisWorkbook.Sheets("إدخال البيانات")
    
    ' Clear previous search results
    searchSheet.Range("D3:H12").ClearContents
    
    ' Get the last row of data
    lastRow = dataSheet.Cells(dataSheet.Rows.Count, "A").End(xlUp).row
    
    ' Load search data
    searchData = searchSheet.Range("C3:C12").Value
    
    ' Perform search
    For i = LBound(searchData, 1) To UBound(searchData, 1)
        If searchData(i, 1) <> "" Then
            matchRow = Application.Match(searchData(i, 1), dataSheet.Range("A1:A" & lastRow), 0)
            
            If Not IsError(matchRow) Then
                ' Transfer data to searchSheet
                searchSheet.Cells(i + 2, 4).Value = dataSheet.Cells(matchRow, 8).Value
                searchSheet.Cells(i + 2, 5).Value = dataSheet.Cells(matchRow, 12).Value
                searchSheet.Cells(i + 2, 6).Value = dataSheet.Cells(matchRow, 17).Value
                searchSheet.Cells(i + 2, 7).Value = dataSheet.Cells(matchRow, 18).Value
                searchSheet.Cells(i + 2, 8).Value = dataSheet.Cells(matchRow, 46).Value
            Else
                ' If no match found, indicate it to the user
                searchSheet.Cells(i + 2, 4).Value = "No Match Found"
            End If
        End If
    Next i
    
    ' Reset settings
    Application.Calculation = xlCalculationAutomatic
    Application.ScreenUpdating = True
End Sub











Sub edit()
    If Not PrepareEnvironment("edit") Then Exit Sub

    Dim dataSheet As Worksheet
    Dim searchSheet As Worksheet
    Dim mnaklWS As Worksheet
    Dim logSheet As Worksheet

    On Error GoTo SheetNotFound

    Set dataSheet = ThisWorkbook.Sheets("ALL FA- الاصول")
    Set searchSheet = ThisWorkbook.Sheets("إدخال البيانات")
    Set mnaklWS = ThisWorkbook.Sheets("المناقلات")
    Set logSheet = ThisWorkbook.Sheets("Change Log")
    
    On Error GoTo 0

    If Not ValidateInputs(searchSheet.Range("E18,C24:H24")) Then
        MsgBox "خطأ، يوجد نقص مدخلات", vbExclamation
        GoTo CleanUp
    End If

    ' نسخ القيم الأصلية إلى ورقة Change Log
    LogOriginalValues dataSheet, searchSheet

    UpdateData dataSheet, searchSheet

    TransferData mnaklWS, searchSheet

    ' نسخ القيم الجديدة إلى ورقة Change Log
    LogNewValues dataSheet, searchSheet

CleanUp:
    searchSheet.Range("C24:D24,E24:F24,G24:H24,E18").ClearContents
    CleanEnvironment
    MsgBox "تم التعديل."
    Exit Sub

SheetNotFound:
    MsgBox "خطأ: لم يتم العثور على الورقة المحددة. تأكد من وجود جميع الأوراق المطلوبة.", vbCritical
    Exit Sub
End Sub

Function PrepareEnvironment(mode As String) As Boolean
    If mode = "edit" Then
        ' إجراءات التحضير لوضع التحرير
    Else
        MsgBox "وضع غير معتمد."
        PrepareEnvironment = False
        Exit Function
    End If
    
    PrepareEnvironment = True
End Function

Sub CleanEnvironment()
    ' إعادة تعيين البيئة
End Sub

Function ValidateInputs(rng As Range) As Boolean
    Dim cell As Range
    ValidateInputs = True
    For Each cell In rng
        If IsEmpty(cell.Value) Then
            ValidateInputs = False
            Exit Function
        End If
    Next cell
End Function

Sub UpdateData(dataSheet As Worksheet, searchSheet As Worksheet)
    Dim searchData As Variant
    searchData = searchSheet.Range("C3:C12").Value
    Dim Data As Variant
    Data = dataSheet.Range("A1:AU" & dataSheet.Cells(Rows.Count, "A").End(xlUp).row).Value

    Dim i As Long, j As Long
    For i = LBound(searchData) To UBound(searchData)
        For j = LBound(Data) To UBound(Data)
            If searchData(i, 1) = Data(j, 1) And searchData(i, 1) <> "" Then
                UpdateFields dataSheet, searchSheet, j, i
                Exit For
            End If
        Next j
    Next i
End Sub

Sub UpdateFields(dataSheet As Worksheet, searchSheet As Worksheet, j As Long, i As Long)
    With dataSheet
        .Cells(j, 3).Value = searchSheet.Range("C24").Value
        .Cells(j, 4).Value = searchSheet.Range("D24").Value
        .Cells(j, 5).Value = searchSheet.Range("E24").Value
        .Cells(j, 6).Value = searchSheet.Range("F24").Value
        .Cells(j, 7).Value = searchSheet.Range("G24").Value
        .Cells(j, 8).Value = searchSheet.Range("H24").Value
        .Cells(j, 46).Value = searchSheet.Range("E18").Value
        .Cells(j, 47).Value = searchSheet.Range("F18").Value
        .Cells(j, 48).Value = searchSheet.Range("G18").Value
        .Cells(j, 49).Value = searchSheet.Range("H18").Value
    End With
End Sub

Sub TransferData(mnaklWS As Worksheet, searchSheet As Worksheet)
    Dim i As Long, lr As Long, valC As String
    With searchSheet
        For i = 3 To 12
            valC = .Range("C" & i).Value
            If valC = "" Then Exit Sub
            lr = mnaklWS.Cells(mnaklWS.Rows.Count, "C").End(xlUp).row
            With mnaklWS
                .Range("C" & lr + 1).Value = valC
                .Range("B" & lr + 1).Value = searchSheet.Range("E" & i).Value
                .Range("E" & lr + 1).Value = searchSheet.Range("G15").Value
                .Range("F" & lr + 1).Value = searchSheet.Range("D" & i).Value
                .Range("G" & lr + 1).Value = searchSheet.Range("H24").Value
            End With
        Next i
    End With
End Sub

Sub LogOriginalValues(dataSheet As Worksheet, searchSheet As Worksheet)
    Dim logSheet As Worksheet
    Set logSheet = ThisWorkbook.Sheets("Change Log")
    Dim logRow As Long
    logRow = logSheet.Cells(logSheet.Rows.Count, 1).End(xlUp).row + 1

    Dim timeStamp As String
    timeStamp = Format(Now, "dd/mm/yy hh:mm AM/PM")

    ' تسجيل القيم الأصلية في السجل
    Dim searchData As Variant
    searchData = searchSheet.Range("C3:C12").Value
    Dim Data As Variant
    Data = dataSheet.Range("A1:AU" & dataSheet.Cells(Rows.Count, "A").End(xlUp).row).Value

    Dim i As Long, j As Long
    For i = LBound(searchData) To UBound(searchData)
        For j = LBound(Data) To UBound(Data)
            If searchData(i, 1) = Data(j, 1) And searchData(i, 1) <> "" Then
                With logSheet
                    .Cells(logRow, 1).Value = logRow - 1 ' طرح 1 لأن أول صف يستخدم للعناوين
                    .Cells(logRow, 2).Value = "Original"
                    .Cells(logRow, 3).Value = timeStamp
                    .Cells(logRow, 4).Value = Data(j, 1) ' رقم Asset Tag
                    .Cells(logRow, 5).Value = Data(j, 3)
                    .Cells(logRow, 6).Value = Data(j, 4)
                    .Cells(logRow, 7).Value = Data(j, 5)
                    .Cells(logRow, 8).Value = Data(j, 6)
                    .Cells(logRow, 9).Value = Data(j, 7)
                    .Cells(logRow, 10).Value = Data(j, 8)
                    .Cells(logRow, 11).Value = Data(j, 46)
                    .Cells(logRow, 12).Value = Data(j, 47)
                    ' التحقق من الأعمدة 48 و49
                    If UBound(Data, 2) >= 48 Then
                        If Not IsEmpty(Data(j, 48)) Then .Cells(logRow, 13).Value = Data(j, 48)
                    End If
                    If UBound(Data, 2) >= 49 Then
                        If Not IsEmpty(Data(j, 49)) Then .Cells(logRow, 14).Value = Data(j, 49)
                    End If
                End With
                
                ' تلوين الخلايا المحتوية على بيانات فقط باللون الذهبي
                For k = 1 To 14
                    If Not IsEmpty(logSheet.Cells(logRow, k).Value) Then
                        logSheet.Cells(logRow, k).Interior.color = RGB(255, 242, 204) ' لون ذهبي التمييز 4، 80% أفتح
                    End If
                Next k
                
                logRow = logRow + 1
                Exit For
            End If
        Next j
    Next i
End Sub

Sub LogNewValues(dataSheet As Worksheet, searchSheet As Worksheet)
    Dim logSheet As Worksheet
    Set logSheet = ThisWorkbook.Sheets("Change Log")
    Dim logRow As Long
    logRow = logSheet.Cells(logSheet.Rows.Count, 1).End(xlUp).row + 1

    Dim timeStamp As String
    timeStamp = Format(Now, "dd/mm/yy hh:mm AM/PM")

    ' تسجيل القيم الجديدة في السجل
    With logSheet
        .Cells(logRow, 1).Value = logRow - 1 ' طرح 1 لأن أول صف يستخدم للعناوين
        .Cells(logRow, 2).Value = "New"
        .Cells(logRow, 3).Value = timeStamp
        .Cells(logRow, 4).Value = searchSheet.Range("C3").Value ' رقم Asset Tag
        .Cells(logRow, 5).Value = searchSheet.Range("C24").Value
        .Cells(logRow, 6).Value = searchSheet.Range("D24").Value
        .Cells(logRow, 7).Value = searchSheet.Range("E24").Value
        .Cells(logRow, 8).Value = searchSheet.Range("F24").Value
        .Cells(logRow, 9).Value = searchSheet.Range("G24").Value
        .Cells(logRow, 10).Value = searchSheet.Range("H24").Value
        .Cells(logRow, 11).Value = searchSheet.Range("E18").Value
        .Cells(logRow, 12).Value = searchSheet.Range("F18").Value
        .Cells(logRow, 13).Value = searchSheet.Range("G18").Value
        .Cells(logRow, 14).Value = searchSheet.Range("H18").Value
    End With

    ' تلوين الصف باللون الأخضر
    For i = 1 To 14
        If Not IsEmpty(logSheet.Cells(logRow, i).Value) Then
            logSheet.Cells(logRow, i).Interior.color = RGB(226, 239, 218)
        End If
    Next i
End Sub













Sub Clear()

Sheet1.Range("C3:h12").ClearContents
Sheet1.Range("C24:H24").ClearContents
End Sub

Sub ins()
    Dim r As Integer
    Dim wsSource As Worksheet
    Dim wsDestination As Worksheet
    Dim searchValue As Variant

    ' تعيين أوراق العمل
    Set wsSource = ThisWorkbook.Sheets("A5")
    Set wsDestination = ThisWorkbook.Sheets("إدخال البيانات")

    ' التحقق من وجود قيمة في الخلية H25
    If Not IsEmpty(wsDestination.Range("H25").Value) Then
        searchValue = wsDestination.Range("H25").Value
        ' البحث عن القيمة في العمود T
        r = Application.Match(searchValue, wsSource.Range("T2:T71"), 0)

        If Not IsError(r) Then
            ' إذا تم العثور على مطابقة، نقل البيانات
            With wsDestination
                .Range("C24").Value = wsSource.Cells(r + 1, "O").Value
                .Range("D24").Value = wsSource.Cells(r + 1, "P").Value
                .Range("E24").Value = wsSource.Cells(r + 1, "Q").Value
                .Range("F24").Value = wsSource.Cells(r + 1, "R").Value
                .Range("G24").Value = wsSource.Cells(r + 1, "S").Value
                .Range("H24").Value = wsSource.Cells(r + 1, "T").Value
            End With
        Else
            MsgBox "القيمة المختارة ليست موجودة في القائمة. يرجى التحقق."
        End If
    Else
        MsgBox "الرجاء تحديد قيمة من القائمة المنسدلة في الخلية H25."
    End If
End Sub

Sub cpy()
    On Error GoTo ErrorHandler
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Sheets("إدخال البيانات")
    
    Dim sourceRow As Long
    Dim targetRow As Long
    sourceRow = 23 ' الصف المصدر ثابت
    targetRow = 24 ' الصف الوجهة ثابت
    
    Dim col As Variant
    Dim emptyCells As String
    For Each col In Array("C", "D", "E", "F", "G", "H")
        If Not IsEmpty(ws.Cells(sourceRow, col).Value) Then
            ws.Cells(targetRow, col).Value = ws.Cells(sourceRow, col).Value
        Else
            emptyCells = emptyCells & col & sourceRow & ", "
        End If
    Next col
    
    If Len(emptyCells) > 0 Then
        MsgBox "خطأ: الخلايا الفارغة في الأعمدة والصفوف التالية: " & Left(emptyCells, Len(emptyCells) - 2)
    Else
        MsgBox "تم نسخ البيانات بنجاح."
    End If
    Exit Sub
    
ErrorHandler:
    MsgBox "حدث خطأ أثناء نسخ البيانات. الرجاء التحقق من صحة البيانات."
End Sub








Sub delete_5_entry_with_confirmation_arabic()
    Dim confirm1 As VbMsgBoxResult
    Dim confirm2 As VbMsgBoxResult
    Dim dataSheet As Worksheet
    Dim searchSheet As Worksheet
    Dim dataRange As Range
    Dim lastDataRow As Long
    Dim tbl As ListObject
    Dim deleteRange As Range
    Dim logSheet As Worksheet
    Dim deletedItems As Range

    Set dataSheet = ThisWorkbook.Sheets("ALL FA- الاصول")
    Set searchSheet = ThisWorkbook.Sheets("إدخال البيانات")
    Set tbl = dataSheet.ListObjects("Table2")
    Set logSheet = ThisWorkbook.Sheets("Log")

    confirm1 = MsgBox("هل أنت متأكد أنك تريد حذف البيانات؟ لا يمكن التراجع عن هذا الإجراء", vbYesNo + vbQuestion, "تأكيد")
    
    If confirm1 = vbYes Then
        confirm2 = MsgBox("هذا الإجراء سيقوم بحذف البيانات نهائياً. هل أنت متأكد تماماً؟", vbYesNo + vbExclamation, "تأكيد نهائي")
        
        If confirm2 = vbYes Then
            Application.ScreenUpdating = False
            lastDataRow = dataSheet.Cells(dataSheet.Rows.Count, "A").End(xlUp).row
            Set dataRange = dataSheet.Range("A1:A" & lastDataRow)
            tbl.Range.AutoFilter Field:=1, Criteria1:=Application.Transpose(searchSheet.Range("C3:C12").Value), Operator:=xlFilterValues
            
            On Error Resume Next
            Set deleteRange = tbl.DataBodyRange.SpecialCells(xlCellTypeVisible)
            If Not deleteRange Is Nothing Then
                Set deletedItems = deleteRange.EntireRow
                deletedItems.Copy
                logSheet.Cells(logSheet.Rows.Count, "A").End(xlUp).Offset(1, 0).PasteSpecial Paste:=xlPasteValues
                deleteRange.EntireRow.Delete
            End If
            On Error GoTo 0
            
            tbl.AutoFilter.ShowAllData
            Application.ScreenUpdating = True
            MsgBox "تم حذف البيانات بنجاح"
        Else
            MsgBox "تم إلغاء عملية الحذف"
        End If
    Else
        MsgBox "تم إلغاء عملية الحذف"
    End If
End Sub









Private Sub Worksheet_Change(ByVal Target As Range)
    Dim wsSource As Worksheet, wsTarget As Worksheet
    Dim matchRow As Long, lastRow As Long, cellVal As String
    Dim uniqueDict As Object, uniqueDictDept As Object, uniqueDictRoom As Object
    Dim cellValRoomTag As String, cellValRoom As String
    Dim foundFloor As Boolean, foundBuilding As Boolean

    Set wsSource = ThisWorkbook.Sheets("A5")
    Set wsTarget = ThisWorkbook.Sheets("إدخال البيانات")
    Set uniqueDict = CreateObject("Scripting.Dictionary")
    Set uniqueDictDept = CreateObject("Scripting.Dictionary")
    Set uniqueDictRoom = CreateObject("Scripting.Dictionary")

    Application.ScreenUpdating = False
    Application.EnableEvents = False

    ' التعامل مع تغييرات في الخلية H24
    If Not Intersect(Target, wsTarget.Range("H24")) Is Nothing Then
        If Target.Cells.Count = 1 Then ' تأكد من أن Target هي خلية واحدة فقط
            cellVal = Target.Value
            lastRow = wsSource.Cells(wsSource.Rows.Count, "A").End(xlUp).row
            For matchRow = 2 To lastRow
                If wsSource.Cells(matchRow, "A").Value = cellVal Then
                    If Not uniqueDict.Exists(wsSource.Cells(matchRow, "B").Value) Then
                        uniqueDict.Add wsSource.Cells(matchRow, "B").Value, Nothing
                    End If
                End If
            Next matchRow
            With wsTarget.Range("E18").Validation
                .Delete
                If uniqueDict.Count > 0 Then
                    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                    xlBetween, Formula1:=Join(uniqueDict.Keys, ",")
                End If
                .IgnoreBlank = True
                .InCellDropdown = True
                .InputTitle = ""
                .ErrorTitle = ""
                .InputMessage = ""
                .ErrorMessage = ""
                .ShowInput = True
                .ShowError = True
            End With
        End If
    End If

    ' التحقق من التغييرات في الخلية E18 وتحديث F18, G18, H18
    If Not Intersect(Target, wsTarget.Range("E18")) Is Nothing Then
        If Target.Cells.Count = 1 Then ' تأكد من أن Target هي خلية واحدة فقط
            cellVal = Target.Value
            lastRow = wsSource.Cells(wsSource.Rows.Count, "B").End(xlUp).row
            For matchRow = 2 To lastRow
                If wsSource.Cells(matchRow, "B").Value = cellVal Then
                    wsTarget.Range("F18").Value = wsSource.Cells(matchRow, "C").Value
                    wsTarget.Range("G18").Value = wsSource.Cells(matchRow, "D").Value
                    wsTarget.Range("H18").Value = wsSource.Cells(matchRow, "E").Value
                    Exit For
                End If
            Next matchRow
        End If
    End If

    Application.EnableEvents = True
    Application.ScreenUpdating = True
End Sub









Sub تكهين()

    On Error GoTo ErrorHandler

    Application.ScreenUpdating = False
    Call search

    Dim lr As Long
    Dim i As Long, j As Long
    Dim valC As Variant
    Dim valF10 As Variant, valG10 As Variant, valH10 As Variant
    Dim highlightColor As Long
    valF10 = Sheet1.Range("F15").Value
    valG10 = Sheet1.Range("G15").Value
    valH10 = Sheet1.Range("H15").Value
    highlightColor = Sheet1.Range("M11").Interior.color

    Dim estbWS As Worksheet
    Set estbWS = Sheets("الاستبعادات")

' تحقق من القيم الفريدة في العمود "D"
If CheckForMultipleDepartments(Sheet1) Then
    MsgBox " يوجد أكثر من قسم . يرجى التحقق من البيانات المدخلة ", vbExclamation
    Exit Sub ' التوقف عن تنفيذ الكود بعد عرض التنبيه
End If





    ' الجزء الأول
    ' مرحلة البحث والتحديث الأولى
    With Sheet1
        For i = 3 To 12
            valC = .Range("C" & i).Value
            If valC = "" Then GoTo nextIteration1

            With Sheet2
                lr = .Cells(.Rows.Count, "A").End(xlUp).row
                For j = 1 To lr
                    If valC = .Range("A" & j).Value Then
                        .Range("A" & j & ":AW" & j).Interior.color = highlightColor
                        .Range("AF" & j).Value = valF10
                        .Range("AG" & j).Value = valG10
                        .Range("AH" & j).Value = valH10
                        Exit For
                    End If
                Next j
            End With

nextIteration1:
        Next i
    End With

    ' مرحلة التحديث في ورقة "الاستبعادات"
    With Sheet1
        For i = 3 To 12
            valC = .Range("C" & i).Value
            If valC = "" Then GoTo nextIteration2

            With estbWS
                lr = .Cells(.Rows.Count, "C").End(xlUp).row
                .Range("C" & lr + 1).Value = valC
                .Range("B" & lr + 1).Value = Sheet1.Range("E" & i).Value
                .Range("E" & lr + 1).Value = Sheet1.Range("G15").Value
            End With

nextIteration2:
        Next i
    End With

    ' الجزء الثاني-1
    Dim LR_erjaa As Long
    LR_erjaa = 10
    Sheet14.Range("m10:I19").ClearContents
    Sheet14.Range("m21:m22").ClearContents
    Sheet14.Range("D21:G24").ClearContents
    Sheet14.Range("M5").Value = "الجهة المرجعة/ "

    Dim TempName_ As String
    Dim DepName As String

    ' مرحلة البحث والتحديث في Sheet14
    With Sheet1
        For i = 3 To 12
            valC = .Range("C" & i).Value
            If valC = "" Then GoTo nextIteration3

            With Sheet2
                lr = .Cells(.Rows.Count, "A").End(xlUp).row
                For j = 1 To lr
                    If valC = .Range("A" & j).Value Then
                        Sheet14.Range("m" & LR_erjaa).Value = .Range("A" & j).Value
                        Sheet14.Range("L" & LR_erjaa).Value = .Range("L" & j).Value
                        Sheet14.Range("I" & LR_erjaa).Value = 1
                        Sheet14.Range("M21").Value = .Range("AT" & j).Value
                        Sheet14.Range("M22").Value = .Range("AW" & j).Value
                        Sheet14.Range("M5").Value = "الجهة المرجعة/ " & .Range("H" & j).Value
                        Sheet14.Range("B4").Value = "التاريخ: " & Sheet1.Range("G15").Text

                        If Trim(.Range("H" & j).Value) <> "" Then
                            TempName_ = .Range("H" & j).Value
                        End If

                        DepName = .Range("AT" & j).Value
                        LR_erjaa = LR_erjaa + 1
                        Exit For
                    End If
                Next j
            End With

nextIteration3:
        Next i
    End With

    ' الجزء الثاني-2
    Dim LR_S As Long
    Dim LR_T As Long
    Dim LR_U As Long
    Dim LR_P As Long
    Dim LR_Q As Long
    Dim CELL1 As Range
    Dim CELL2 As Range
    Dim dCounter As Integer
    Dim foundS As Boolean
    Dim foundT As Boolean
    Dim foundU As Boolean
    Dim foundM5 As Boolean
    Dim m5Text As String

    ' تحديد آخر صف في الأعمدة S و T و U و P و Q
    LR_S = Sheet14.Cells(Sheet14.Rows.Count, "S").End(xlUp).row
    LR_T = Sheet14.Cells(Sheet14.Rows.Count, "T").End(xlUp).row
    LR_U = Sheet14.Cells(Sheet14.Rows.Count, "U").End(xlUp).row
    LR_P = Sheet14.Cells(Sheet14.Rows.Count, "P").End(xlUp).row
    LR_Q = Sheet14.Cells(Sheet14.Rows.Count, "Q").End(xlUp).row

    dCounter = 21
    foundS = False
    foundT = False
    foundU = False
    foundM5 = False

    ' قراءة النص الذي يلي "الجهة المرجعة/ " في الخلية M5
    m5Text = Replace(Sheet14.Range("M5").Value, "الجهة المرجعة/ ", "")

    ' البحث في العمود "S"
    For Each CELL1 In Sheet14.Range("L10:L19")
        If foundS Then Exit For
        For Each CELL2 In Sheet14.Range("S2:S" & LR_S)
            If CELL1.Value <> "" And CELL1.Value = CELL2.Value Then
                Sheet14.Range("D" & dCounter).Value = Sheet14.Range("P3").Value
                dCounter = dCounter + 1
                foundS = True
                Exit For
            End If
        Next CELL2
    Next CELL1

    ' البحث في العمود "T"
    For Each CELL1 In Sheet14.Range("L10:L19")
        If foundT Then Exit For
        For Each CELL2 In Sheet14.Range("T2:T" & LR_T)
            If CELL1.Value <> "" And CELL1.Value = CELL2.Value Then
                Sheet14.Range("D" & dCounter).Value = Sheet14.Range("P4").Value
                dCounter = dCounter + 1
                foundT = True
                Exit For
            End If
        Next CELL2
    Next CELL1

    ' البحث في العمود "U"
    For Each CELL1 In Sheet14.Range("L10:L19")
        If foundU Then Exit For
        For Each CELL2 In Sheet14.Range("U2:U" & LR_U)
            If CELL1.Value <> "" And CELL1.Value = CELL2.Value Then
                If CheckM5Value(m5Text, "P", LR_P) Then
                    Sheet14.Range("D" & dCounter).Value = Sheet14.Range("P5").Value
                ElseIf CheckM5Value(m5Text, "Q", LR_Q) Then
                    Sheet14.Range("D" & (dCounter + 1)).Value = Sheet14.Range("P6").Value
                End If
                dCounter = dCounter + 1
                foundU = True
                Exit For
            End If
        Next CELL2
    Next CELL1



  Dim defaultPdfName As String, pdfName As String
    Dim savePath As String
    
    defaultPdfName = DepName & " " & Format(Now, "yyyy-MM-dd_hh_mm_ss")
    
    ' Set the save path to the Excel file's directory with "PDF Departments" folder
    savePath = ThisWorkbook.Path & "\PDF Return document\" & defaultPdfName & ".pdf"
    
    ' Create the folder if it doesn't exist
    If Dir(ThisWorkbook.Path & "\PDF Return document\", vbDirectory) = "" Then
        MkDir ThisWorkbook.Path & "\PDF Return document\"
    End If
    
    ' Export the used range as PDF with the selected name
   ' SaveUsedRangeAsPDF1 Sheet14, savePath
    'ws6.Activate
    ' MsgBox "تم الترحيل إلى شييت البي دي إف"
    
   Sheet14.Range("b2:n24").ExportAsFixedFormat Type:=xlTypePDF, Filename:=savePath, Quality:=xlQualityStandard





    ' التأكد من عدم وجود فراغات بين الخلايا D21 و D23
    Call تصليح_اماكن_بدون_فراغات

    Application.ScreenUpdating = True
    MsgBox "تم تنفيذ الكود بنجاح"
    Exit Sub

ErrorHandler:
    MsgBox "حدث خطأ أثناء تنفيذ الكود. يرجى التحقق من البيانات وإعادة المحاولة." & Chr(10) & "خطأ رقم: " & Err.Number & Chr(10) & "الوصف: " & Err.Description, vbCritical
    Application.ScreenUpdating = True

End Sub

Function CheckForMultipleDepartments(ws As Worksheet) As Boolean
    Dim departmentDict As Object
    Dim i As Long
    Dim valD As Variant
    
    Set departmentDict = CreateObject("Scripting.Dictionary")
    
    For i = 3 To 12
        valD = ws.Range("D" & i).Value
        If valD <> "" Then
            If Not departmentDict.Exists(valD) Then
                departmentDict.Add valD, Nothing
            End If
        End If
    Next i
    
    CheckForMultipleDepartments = (departmentDict.Count > 1)
End Function


Function CheckM5Value(m5Value As Variant, col As String, lr As Long) As Boolean
    Dim cell As Range
    CheckM5Value = False
    For Each cell In Sheet14.Range(col & "10:" & col & lr)
        If m5Value = cell.Value Then
            CheckM5Value = True
            Exit For
        End If
    Next cell
End Function


Sub تصليح_اماكن_بدون_فراغات()
    Dim fixRange As Range
    Set fixRange = Sheet14.Range("D21:D24")

    For i = 1 To fixRange.Cells.Count - 1
        If IsEmpty(fixRange.Cells(i).Value) Then
            fixRange.Cells(i).Value = fixRange.Cells(i + 1).Value
            fixRange.Cells(i + 1).ClearContents
        End If
    Next i

    If IsEmpty(Sheet14.Range("D21").Value) And IsEmpty(Sheet14.Range("D22").Value) And IsEmpty(Sheet14.Range("D23").Value) And IsEmpty(Sheet14.Range("D24").Value) Then
        Sheet14.Range("D21").Value = Sheet14.Range("H22").Value
    End If
End Sub




    


